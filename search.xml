<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[搜索架构——第0篇：VMware环境配置]]></title>
    <url>%2Fzh-CN%2Fvmware-ubuntu-env-config.html</url>
    <content type="text"><![CDATA[本文主要介绍在VMware中安装MyEcplise CI 2018，安装多版本JDK以及Tomcat。在虚拟机中安装Ubuntu之前，首先需要明确电脑有几个CPU，是几核几线程？ CPU个数、几核以及几线程？本文主机为Windows环境，在Windows中查看系统CPU个数，只需在cmd命令中输入systeminfo。 cmd-&gt;systeminfo 查看CPU核心数、线程数： cmd-&gt;wmic-&gt;cpu get 在cmd命令中输入wmic，然后在出现的新窗口中输入cpu get。 NumberOfCores：表示CPU核心数 NumberOfLogicalProcessors：表示CPU线程数 多版本JDK安装tar 命令： tar -zxvf file_name递归创建jvm目录，将解压后的JDK包全部拷贝进该路径下。 $ mkdir -p ~/Applications/jvm 同样的方法安装JDK8，JDK11。注意：用此方法，不需要配置JAVA_HOME。 $ sudo update-alternatives --install /usr/bin/java java ~/Applications/jvm/jdk-10.0.2/bin/java 310$ sudo update-alternatives --install /usr/bin/javac javac ~/Applications/jvm/jdk-10.0.2/bin/javac 310$ sudo update-alternatives --install /usr/bin/jar jar ~/Applications/jvm/jdk-10.0.2/bin/jar 310 自动切换版本： $ sudo update-alternatives --config java 查看当前JDK版本：（这里注意，version前是1个横杠） $ java -version 关于MyEclipse启动器创建在启动器中可以右击，Add to Favorites，这样就可以在Dock中显示了。 $ sudo vim /usr/share/applications/myeclipseci.desktop [Desktop Entry]Encoding=UTF-8Name=MyEclipse CIComment=MyEclipse IDEExec=~/Applications/myeclipseci/myeclipseIcon=~/Applications/myeclipseci/icon.xpmTerminal=falseStartupNotify=falseType=ApplicationCategories=Application;Development; 建议：最好安装在/home目录下，不然各种权限问题（不仅会造成激活失败，还可能使得软件无法启动）。本文就在Home目录下创建了Applications目录专门用来安装软件。 对MyEclispe的一些优化 关闭updating indexes Window-&gt;Preferences-&gt;Maven-&gt;Download repository index updates on startup 配置utf-8编码 Window-&gt;Preferences-&gt;General-&gt;Workspace-&gt;[UTF-8, Unix] 配置JDK Window-&gt;Preferences-&gt;Java-&gt;Installed JREs-&gt;Add.. 配置tomcat Windows-&gt;Preferences-&gt;Servers-&gt;Runtime Environments-&gt;tomcat[8,8.5,9] 显示Servers Windows-&gt;Show View-&gt;Other…-&gt;Java EE-&gt;Servers 新建Server 右击底部Servers面板-&gt;New-&gt;Server 附录VM Tools解压提示空间不足，先查看内存，如果确实不足，请拷贝至其他目录下进行解压。$ df -h JDK10以上貌似不支持-JAR命令，请切换回JDK8。 安装nodejs并更新$ sudo apt install nodejs$ sudo apt install npm$ npm install -g n$ n latest 安装hexo$ npm install -g hexo-cli ubuntu启动时报错。 piix4_smbus: Host SMBus controller not enabled!解决方案：打开blacklist.conf在文件尾部添加一句blacklist i2c_piix4$ sudo /etc/modprobe.d/blacklist.conf 重新生成引导$ sudo update-initramfs -u -k all 由于需要使用独立IP（直接链接物理网络，桥接模式）这时候，需要配置DHCP。首先查看网卡名称：ens33$ ifconfig ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500 inet 192.168.47.133 netmask 255.255.255.0 broadcast 192.168.47.255 inet6 fe80::20c:29ff:fedf:572d prefixlen 64 scopeid 0x20 ether 00:0c:29:df:57:2d txqueuelen 1000 (Ethernet) RX packets 760 bytes 413857 (413.8 KB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 593 bytes 132429 (132.4 KB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt; mtu 65536 inet 127.0.0.1 netmask 255.0.0.0 inet6 ::1 prefixlen 128 scopeid 0x10 loop txqueuelen 1000 (Local Loopback) RX packets 2043 bytes 131698 (131.6 KB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 2043 bytes 131698 (131.6 KB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 接着，配置DHCP，并重启网络。(在interfaces中添加以下内容) auto ens33iface ens33 inet dhcp $ sudo vim /etc/network/interfaces$ sudo /etc/init.d/networking restart 批量将文件夹设置为默认权限755，将文件设置为默认权限644。$ find . -type d -exec chmod 755 &#123;&#125; \;$ find . -type f -exec chmod 644 &#123;&#125; \; References:1 Windows下查看电脑的CPU个数，核心数，线程数2 关于VMware的桥接模式3 VMware虚拟机Ubuntu16.04桥接模式无法上网4 Ubuntu 通过umask设置默认文件权限644，目录权限755]]></content>
      <categories>
        <category>System Architecture</category>
      </categories>
      <tags>
        <tag>VMware</tag>
        <tag>MyEclipse</tag>
        <tag>JDK</tag>
        <tag>Tomcat</tag>
        <tag>nodejs</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搜索篇（1）Lucene全文检索工具库架构]]></title>
    <url>%2Fzh-CN%2Flucene-arch.html</url>
    <content type="text"><![CDATA[上一篇文章《搜索篇（0）Lucene环境配置》讲解了Lucene环境的配置，在本篇文章中将介绍一下它的架构。Lucene是一个采用纯JAVA实现的高性能、可扩展的信息检索开源工具库，在2001年成为开源组织Apache Jakarta的成员项目。需要强调的是，Lucene并不具备搜索引擎的完整特性，它只关注文本的索引和搜索，并提供了一套十分强大却又简单易用的核心API，隐藏了复杂的索引和搜索实现过程。所以可以简单的将Lucene视为应用程序下的一个接口层，如上图所示。 网络爬虫只为搜索引擎采集到海量文档信息，内容的有效检索还需要索引技术来实现。搜索引擎的索引器负责生成索引文件，其工作上下文结构如下图所示。其中，文本解析器主要包括中文分词、垃圾信息过滤等模块，而中文分词(Chinese Word Segmentation)是对信息处理的基础，如果没有中文分词，根本无法建立高效的索引结构。 References:[1] Michael McCandless, Erik Hatcher, and Otis Gospodnetić, Lucene in Action(Second Edition)[2] https://baike.baidu.com/item/Lucene ,2018-9-13[3] https://lucene.apache.org/core/7_4_0/index.html ,2018-9-13[4] DJ. QING, Android-based virtual chat robot development]]></content>
      <categories>
        <category>Artificial Intelligence</category>
      </categories>
      <tags>
        <tag>搜索引擎</tag>
        <tag>Lucene</tag>
        <tag>架构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搜索篇（0）Lucene环境配置]]></title>
    <url>%2Fzh-CN%2Flucene-env-config.html</url>
    <content type="text"><![CDATA[Lucene截止目前，最新版本为v7.4.0。它是一个开放源代码的全文检索引擎工具包，但它不是一个完整的全文检索引擎，而是一个全文检索引擎的架构，提供了完整的查询引擎和索引引擎，部分文本分析引擎（英文与德文两种西方语言）。本系列文章重点对Lucene全文检索工具库进行了分析，其中索引部分包括中文分词及其常见的分词器介绍、倒排索引的构建、索引结构的分析，检索部分涵盖了基本查询方式介绍、VSM评分机制、自定义排序方式以及与SQL查询异同比较；最后简单的介绍了Luke工具的使用。 配置Lucene开发环境 安装Java开发环境。（JDK 8 up） 下载Lucene：http://www.apache.org/dyn/closer.lua/lucene/java/7.4.0 在Eclipse（或MyEclipse[推荐]）中，创建项目名HelloLucene（推荐Web Project），引入Lucene JAR包。 注：Add External JARs…(右击项目-&gt;Build Path) 附录（配置git）作为一名程序员亦或是学生，从github上抄代码的能力不可或缺。以下为git配置命令，请将name、email设置成自己的~$ git config --global user.name &quot;qingdujun&quot;$ git config --global user.email &quot;123456@gmail.com&quot; 运行ssh-keygen命令后，直接一路敲击回车键即可。$ ssh-keygen -t rsa -C &quot;123456@gmail.com&quot; Generating public/private rsa key pair.Enter file in which to save the key (/home/qingdujun/.ssh/id_rsa):Created directory ‘/home/qingdujun/.ssh’.Enter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in /home/qingdujun/.ssh/id_rsa.Your public key has been saved in /home/qingdujun/.ssh/id_rsa.pub.根据具体的提示，如我的是/home/qingdujun/.ssh/id_rsa.pub.将该文件内容。拷贝至，github.com&gt;settings&gt;SSH and GPGkeys−&gt;New SSH key References:[1] https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000[2] https://git-scm.com/book/zh/v1/Git-%E5%9F%BA%E7%A1%80-%E6%89%93%E6%A0%87%E7%AD%BE[3] http://www.ruanyifeng.com/blog/2014/06/git_remote.html[4] https://www.genuitec.com/products/myeclipse/download/[5] http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html[6] http://www.apache.org/dyn/closer.lua/lucene/java/7.4.0]]></content>
      <categories>
        <category>Artificial Intelligence</category>
      </categories>
      <tags>
        <tag>搜索引擎</tag>
        <tag>Lucene</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[字符串哈希算法——BKDRHash]]></title>
    <url>%2Fzh-CN%2Fstr-hash-func-bkdrhash.html</url>
    <content type="text"><![CDATA[BYVoid对常用的几种字符串哈希函数进行了一次小小的评测。其评测结果，按照得分从高到低依次为BKDRHash，APHash，DJBHash，JSHash，RSHash，SDBMHash，PJWHash，ELFHash。 其中，最优的字符串哈希算法BKDRHash函数实现如下：// BKDR Hash Functionunsigned int BKDRHash(const char *str)&#123; unsigned int seed = 131; // 31 131 1313 13131 131313 etc.. unsigned int hash = 0; while (*str)&#123; hash = hash * seed + (*str++); &#125; return (hash &amp; 0x7FFFFFFF);&#125; 比如，哈希字符串“Hello,World!”将会得到数字“632968537”。 References:[1] https://www.byvoid.com/zhs/blog/string-hash-compare，2018-09-18]]></content>
      <categories>
        <category>Mathematics</category>
      </categories>
      <tags>
        <tag>哈希</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fzh-CN%2Fhello-world.html</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new "My New Post" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
